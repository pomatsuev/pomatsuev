{"version":3,"sources":["images/HP.png","components/Home.jsx","components/LoadData.jsx","components/Repos.jsx","components/About.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Home","props","initialState","isLoading","data","error","reducer","state","action","type","payload","Error","LoadData","url","children","useReducer","dispatch","useEffect","axios","get","timeout","then","res","status","statusText","catch","err","Repos","username","map","repo","key","id","href","html_url","className","name","message","About","years","Math","trunc","Date","now","src","avatar_url","location","public_repos","login","App","useState","isOpen","toggleOpen","mnuLinksListClasses","mnuButtonClasses","mnuText","onClick","evt","preventDefault","path","exact","HP","to","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8350392.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HP.70b01090.png\";","import React from 'react';\r\n\r\nconst Home = (props) => {\r\n  return(\r\n    <>\r\n      <h3>Сайт одного программиста</h3>        \r\n      <p>\r\n        Который хотел изучить все на свете\r\n      </p>\r\n      <p>\r\n        Но все объять невозможно\r\n      </p>\r\n      <p>\r\n        Поэтому он знает всего понемногу\r\n      </p>\r\n      <p>\r\n        Эта визитка сделанная на React...\r\n        но так же она могла бы быть на Vue\r\n      </p>      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,  \r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'loading':\r\n      return {...state, isLoading: true};\r\n    case 'error':\r\n      return {...state, error: action.payload, isLoading: false}\r\n    case 'success':\r\n      return { isLoading: false, data: action.payload, error: null }\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const LoadData = ({url, children}) =>{\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  useEffect(()=>{\r\n    dispatch({type: 'loading'});\r\n    axios.get(url,{ timeout: 10000 })\r\n      .then(res=>{        \r\n        if(res.status==200){\r\n          dispatch({type: 'success', payload: res.data}); \r\n        } else {\r\n          dispatch({type: 'error', payload: res.statusText})\r\n        }               \r\n      })\r\n      .catch(err=>{\r\n        dispatch({type: 'error', payload: err});\r\n      })\r\n  }, []);\r\n  if(typeof children == 'function'){\r\n    return children(state.isLoading, state.error, state.data);\r\n  } else {\r\n    return children;\r\n  }\r\n}","import React from 'react';\r\nimport {LoadData} from './LoadData';\r\n \r\nconst Repos = ({username}) => {\r\n  return (\r\n    <LoadData url={`https://api.github.com/users/${username}/repos`}>\r\n      {\r\n        (isLoading, err, data) => {\r\n          return <>\r\n            {\r\n              isLoading\r\n                ? <p> Загружается список репозиториев...</p>\r\n                : <ul>\r\n                    {data && data.map(repo=>{\r\n                      return <li key={repo.id}><a \r\n                        href={repo.html_url} \r\n                        className=\"light\">\r\n                          {repo.name} &lt;\r\n                      </a></li>\r\n                    })}\r\n                  </ul>\r\n            }\r\n            {\r\n              err && <p>Ошибка загрузки репозиториев: {err.message}</p>\r\n            }\r\n          </>\r\n        }\r\n      }\r\n    </LoadData>   \r\n  )\r\n}\r\n\r\nexport default Repos;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Repos from './Repos';\r\nimport {LoadData} from './LoadData';\r\n\r\nconst About = (props) => {\r\n  const years = Math.trunc((Date.now() - new Date('1989-02-06'))/(1000*60*60*24*365));\r\n  return(\r\n    <LoadData url={ `https://api.github.com/users/${props.username}` }>\r\n      {\r\n        (isLoading, err, data) => {\r\n          return(\r\n            isLoading \r\n              ? <p>Loading...</p>\r\n              : <>\r\n                  <h2>Обо мне</h2>\r\n                  <p> \r\n                    { data && <img src={data.avatar_url} className=\"github--avatar\" />}\r\n                    Меня зовут Станислав, мне {years}.\r\n                    Еще в школе я начал увлекатся программированием.\r\n                    На старте был Basic. Это был 7-8класс школы.\r\n                    Поступил я в унивеситет на прикладную информатику в экономике,\r\n                    Получил диплом по специальности Информатик-Экономист.\r\n                    Во время обучения в институте, я занялся Web-программированием, \r\n                    но до конца не вдохновился им. В институте нас обучали Delphi,\r\n                    дали немного основ assambler'а. Диплом я защищаю по проекту на FoxPro. \r\n                    После вручения диплома, на работе, мне пришлось поверхностно \r\n                    столкнутся с 1С 7.7, я там же вникаю в С++ и С#, последний язык захватывает меня.\r\n                    Смена места работы, я продолжаю кодить на C#, одновременно плотно\r\n                    погружаясь в 1С 8.х. Перед лицом становится задача, необходимо сделать \r\n                    проект на Ruby on Rails, фронтенд был прикручен с помощью JQuery.\r\n                    1C не отпускает меня на работе, это становится основным видом программирования.\r\n                    Но меня тянет в web, и я изучаю JavaScript и React, вместе с ними получаю\r\n                    знания по webpack, express, nodejs, graphql короче пытаюсь постигнуть full stack. Делаю небольшие проекты\r\n                    для себя, для души. Окунаюсь в React Native. Все задачи которые я ставил\r\n                    перед собой, я решил. Мне становится мало. Перехожу на Vue. И вот мы\r\n                    подошли к текущему моменту моих приключений с языками. Сейчас у меня\r\n                    упал глаз на svelte, попробовать его в деле. Но на самом деле мне нехватает\r\n                    работы в команде и серьезных проектов, попробовать себя. Уверен, что\r\n                    моих знаний максимум на джуниора, потому что отсутствует опыт разработки \r\n                    больших проектов.\r\n                  </p>\r\n                  <h3>Данные с Github</h3>\r\n                  {\r\n                    data && \r\n                      <>\r\n                        <p>{data.name}</p>            \r\n                        <p>{data.location}</p>\r\n                        <p><a href={data.html_url} className=\"light\"> GitHub</a></p>\r\n                        <p>Репозиториев: {data.public_repos}</p>\r\n                        <Repos username={data.login}/>\r\n                      </>\r\n                  }\r\n                  { err && <p> Не удалось получить данные: {err.message} </p> }               \r\n                </>\r\n          )\r\n        }\r\n      }\r\n    </LoadData>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { useState } from 'react';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Link,\r\n  Switch,\r\n  Route } from 'react-router-dom';\r\n  \r\nimport Home from './Home';\r\nimport About from './About';\r\nimport HP from '../images/HP.png';\r\n\r\nconst App = (props) => {  \r\n  const [isOpen, toggleOpen] = useState(false);  \r\n  let mnuLinksListClasses = 'mobile-mnu-links';\r\n  let mnuButtonClasses = 'mobile-mnu-button';\r\n  let mnuText = '<<';\r\n  if(isOpen){\r\n    mnuLinksListClasses += ' open';\r\n    mnuButtonClasses += ' open';\r\n    mnuText = '>>';\r\n  }\r\n  const handleToggleOpen = evt => {\r\n    evt.preventDefault();\r\n    toggleOpen(!isOpen);\r\n  }\r\n  return(\r\n    <Router>\r\n      <main>\r\n        <section className=\"header\">\r\n          <div className=\"header--logo\">\r\n            innei system\r\n          </div>\r\n        </section>\r\n        <section className=\"mnu\">\r\n          <div className={mnuButtonClasses}>\r\n            <div className=\"mnu--button\">\r\n              <a href=\"/#\" onClick={handleToggleOpen}>\r\n                {mnuText}\r\n              </a>\r\n            </div>          \r\n          </div>\r\n          <div className=\"desktop-command-line\">\r\n            C:\\&gt;<span className=\"blink\">_</span>\r\n          </div>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"content--body\"> \r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About username=\"pomatsuev\"/>\r\n            </Route>\r\n            <Route path=\"/feedback\">\r\n              <p>Тут должна была быть форма обратной звязи...\r\n                Но это же визитка...\r\n              </p>\r\n              <p>\r\n                Вы просто пишите мне на <a href=\"mailto:pomatsuev@gmail.com\" className=\"light\">\r\n                  pomatsuev@gmail.com\r\n                </a>\r\n              </p>\r\n            </Route>\r\n            <Route path=\"/game\">\r\n              <h2>Моя игра</h2>\r\n              <p>На коленочке сделал игру Монополию для телефонов, написанна на VUE, \r\n                с использованием технологии PWA (можете сохранить себе на телефон)</p>\r\n              <p>Оцените пожалуйста. Картинка кликабельна</p>\r\n              <a href=\"https://harry-monopoly.github.io\"><img src={HP}/></a>              \r\n            </Route>\r\n          </Switch>        \r\n          </div>        \r\n        </section>\r\n        <section className=\"links\">  \r\n          <ul className=\"desktop-menu-links\">\r\n            <li>\r\n              <Link to=\"/\" onClick={()=>toggleOpen(!isOpen)}>&gt; Главная</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\" onClick={()=>toggleOpen(!isOpen)}>&gt; Обо мне</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/feedback\" onClick={()=>toggleOpen(!isOpen)}>&gt; Связь</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/game\" onClick={()=>toggleOpen(!isOpen)}>&gt; Моя игра</Link>\r\n            </li>\r\n          </ul>                  \r\n          <ul className={mnuLinksListClasses}>\r\n            {\r\n              isOpen && \r\n              <>\r\n                <li>\r\n                  <Link to=\"/\" onClick={()=>toggleOpen(!isOpen)}>&gt; Главная</Link>\r\n                  </li>\r\n                <li>\r\n                  <Link to=\"/about\" onClick={()=>toggleOpen(!isOpen)}>&gt; Обо мне</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/feedback\" onClick={()=>toggleOpen(!isOpen)}>&gt; Связь</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/game\" onClick={()=>toggleOpen(!isOpen)}>&gt; Моя игра</Link>\r\n                </li>\r\n              </>\r\n            }\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </Router>\r\n  )\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/main.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(  \r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}