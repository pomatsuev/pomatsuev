{"version":3,"sources":["images/HP.png","components/Home.jsx","hooks/http.hook.js","components/Repos.jsx","components/About.jsx","components/Links.jsx","components/CommandLine.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Home","props","initialState","isLoading","data","error","reducer","state","action","type","payload","Error","useHttp","url","useReducer","dispatch","useEffect","axios","get","timeout","then","res","status","statusText","catch","err","Repos","username","map","repo","key","id","href","html_url","className","name","About","years","Math","trunc","Date","now","src","avatar_url","alt","location","public_repos","login","message","Links","isOpen","toggleOpen","to","onClick","commandReducer","CommandLine","useState","command","setCommand","el","i","tabIndex","onKeyDown","evt","preventDefault","stopPropagation","keyCode","slice","length","String","fromCharCode","App","mnuLinksListClasses","mnuButtonClasses","mnuText","path","exact","HP","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b4699e22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HP.70b01090.png\";","import React from 'react';\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <>\r\n      <h3>Сайт одного программиста</h3>\r\n      <p>Который хотел изучить все на свете</p>\r\n      <p>Но все объять невозможно</p>\r\n      <p>Поэтому он знает всего по-немногу</p>\r\n      <p>Эта визитка сделанная на React... но так же она могла бы быть на Vue</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  useReducer,\r\n  useEffect\r\n} from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'loading':\r\n      return {\r\n        ...state, isLoading: true\r\n      };\r\n    case 'error':\r\n      return {\r\n        ...state, error: action.payload, isLoading: false\r\n      };\r\n    case 'success':\r\n      return {\r\n        isLoading: false, data: action.payload, error: null\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport function useHttp(url) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'loading'\r\n    });\r\n    axios.get(url, {\r\n        timeout: 10000\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch({\r\n            type: 'success',\r\n            payload: res.data\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: 'error',\r\n            payload: res.statusText\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: 'error',\r\n          payload: err\r\n        });\r\n      })\r\n  }, [url]);\r\n  return {\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    data: state.data\r\n  }\r\n}","import React from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nconst Repos = ({ username }) => {\r\n  const { isLoading, data } = useHttp(`https://api.github.com/users/${username}/repos`);\r\n  return isLoading ? (\r\n    <p> Загружается список репозиториев...</p>\r\n  ) : (\r\n    <ul>\r\n      {data &&\r\n        data.map((repo) => {\r\n          return (\r\n            <li key={repo.id}>\r\n              <a href={repo.html_url} className=\"light\">\r\n                {repo.name} &lt;\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import React from 'react';\r\nimport Repos from './Repos';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nconst About = (props) => {\r\n  const years = Math.trunc((Date.now() - new Date('1989-02-06')) / (1000 * 60 * 60 * 24 * 365));\r\n  const { isLoading, data, err } = useHttp(`https://api.github.com/users/${props.username}`);\r\n  return isLoading ? (\r\n    <p>Loading...</p>\r\n  ) : (\r\n    <>\r\n      <h2>Обо мне</h2>\r\n      <p>\r\n        {data && <img src={data.avatar_url} alt=\"avatar\" className=\"github--avatar\" />}\r\n        Меня зовут Станислав, мне {years}. Еще в школе я начал увлекатся программированием. На\r\n        старте был Basic. Это был 7-8класс школы. Поступил я в унивеситет на прикладную информатику\r\n        в экономике, Получил диплом по специальности Информатик-Экономист. Во время обучения в\r\n        институте, я занялся Web-программированием, но до конца не вдохновился им. В институте нас\r\n        обучали Delphi, дали немного основ assambler'а. Диплом я защищаю по проекту на FoxPro. После\r\n        вручения диплома, на работе, мне пришлось поверхностно столкнутся с 1С 7.7, я там же вникаю\r\n        в С++ и С#, последний язык захватывает меня. Смена места работы, я продолжаю кодить на C#,\r\n        одновременно плотно погружаясь в 1С 8.х. Перед лицом становится задача, необходимо сделать\r\n        проект на Ruby on Rails, фронтенд был прикручен с помощью JQuery. 1C не отпускает меня на\r\n        работе, это становится основным видом программирования. Но меня тянет в web, и я изучаю\r\n        JavaScript и React, вместе с ними получаю знания по webpack, express, nodejs, graphql короче\r\n        пытаюсь постигнуть full stack. Делаю небольшие проекты для себя, для души. Окунаюсь в React\r\n        Native. Все задачи которые я ставил перед собой, я решил. Мне становится мало. Перехожу на\r\n        Vue. И вот мы подошли к текущему моменту моих приключений с языками. Сейчас у меня упал глаз\r\n        на svelte, попробовать его в деле. Но на самом деле мне нехватает работы в команде и\r\n        серьезных проектов, попробовать себя. Уверен, что моих знаний максимум на джуниора, потому\r\n        что отсутствует опыт разработки больших проектов.\r\n      </p>\r\n      <h3>Данные с Github</h3>\r\n      {data && (\r\n        <>\r\n          <p>{data.name}</p>\r\n          <p>{data.location}</p>\r\n          <p>\r\n            <a href={data.html_url} className=\"light\">\r\n              GitHub\r\n            </a>\r\n          </p>\r\n          <p>Репозиториев: {data.public_repos}</p>\r\n          <Repos username={data.login} />\r\n        </>\r\n      )}\r\n      {err && <p> Не удалось получить данные: {err.message} </p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Links = ({ isOpen, toggleOpen }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <Link to=\"/\" onClick={() => toggleOpen(!isOpen)}>\r\n          &gt; Главная\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/about\" onClick={() => toggleOpen(!isOpen)}>\r\n          &gt; Обо мне\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/feedback\" onClick={() => toggleOpen(!isOpen)}>\r\n          &gt; Связь\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/game\" onClick={() => toggleOpen(!isOpen)}>\r\n          &gt; Моя игра\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/aquamarine\" onClick={() => toggleOpen(!isOpen)}>\r\n          &gt; MERN\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useReducer } from 'react';\r\n\r\nfunction commandReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CLEAR':\r\n    case 'CLR':\r\n      return [];\r\n    case 'LS':\r\n    case 'DIR':\r\n      return [\r\n        ...state,\r\n        '>' + action.type,\r\n        '..',\r\n        'program files',\r\n        'program files (x84)',\r\n        'users',\r\n        'windows',\r\n        '~end',\r\n      ];\r\n    case 'HELP':\r\n      return [\r\n        ...state,\r\n        '>' + action.type,\r\n        'Команд очень мало, я добавляю их, можете предложить свои мне на почту',\r\n        '~end',\r\n      ];\r\n    case 'LIST':\r\n      return [...state, '>' + action.type, 'CLEAR', 'CLR', 'LS', 'DIR', 'HELP', 'LIST', '~end'];\r\n\r\n    default:\r\n      return [...state, '>' + action.type, 'command not found', '~end'];\r\n  }\r\n}\r\n\r\nexport const CommandLine = (props) => {\r\n  const [command, setCommand] = useState('');\r\n  const [state, dispatch] = useReducer(commandReducer, []);\r\n  const keyPressedHandle = (evt) => {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    const { keyCode } = evt;\r\n\r\n    if (keyCode > 95 && keyCode < 106) {\r\n      setCommand(command + (keyCode - 96));\r\n    }\r\n\r\n    if (keyCode === 8) {\r\n      setCommand(command.slice(0, command.length - 1));\r\n    }\r\n\r\n    if (keyCode > 64 && keyCode < 91) {\r\n      setCommand(command + String.fromCharCode(keyCode));\r\n    }\r\n\r\n    if (keyCode > 48 && keyCode < 58) {\r\n      setCommand(command + String.fromCharCode(keyCode));\r\n    }\r\n\r\n    if (keyCode === 32) {\r\n      setCommand(command + ' ');\r\n    }\r\n\r\n    if (keyCode === 13) {\r\n      dispatch({ type: command });\r\n      setCommand('');\r\n    }\r\n\r\n    //console.log('Char: ', String.fromCharCode(keyCode), ' Code:', keyCode);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"console-field\">\r\n        <ul>\r\n          {state.map((el, i) => {\r\n            return <li key={i}>{el === '~end' ? <br /> : el}</li>;\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className=\"desktop-command-line\" tabIndex=\"0\" onKeyDown={keyPressedHandle}>\r\n        C:\\&gt;{command}\r\n        <span className=\"blink\">_</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport HP from '../images/HP.png';\r\nimport { Links } from './Links';\r\nimport { CommandLine } from './CommandLine';\r\n\r\nconst App = (props) => {\r\n  const [isOpen, toggleOpen] = useState(false);\r\n  let mnuLinksListClasses = 'mobile-mnu-links';\r\n  let mnuButtonClasses = 'mobile-mnu-button';\r\n  let mnuText = '<<';\r\n  if (isOpen) {\r\n    mnuLinksListClasses += ' open';\r\n    mnuButtonClasses += ' open';\r\n    mnuText = '>>';\r\n  }\r\n  const handleToggleOpen = (evt) => {\r\n    evt.preventDefault();\r\n    toggleOpen(!isOpen);\r\n  };\r\n  return (\r\n    <Router>\r\n      <main>\r\n        <section className=\"header\">\r\n          <div className=\"header--logo\">innei system</div>\r\n        </section>\r\n        <section className=\"mnu\">\r\n          <div className={mnuButtonClasses}>\r\n            <div className=\"mnu--button\">\r\n              <a href=\"/#\" onClick={handleToggleOpen}>\r\n                {mnuText}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <CommandLine />\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"content--body\">\r\n            <Switch>\r\n              <Route path=\"/\" exact>\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <About username=\"pomatsuev\" />\r\n              </Route>\r\n              <Route path=\"/feedback\">\r\n                <p>Тут должна была быть форма обратной звязи... Но это же визитка...</p>\r\n                <p>\r\n                  Вы просто пишите мне на{' '}\r\n                  <a href=\"mailto:pomatsuev@gmail.com\" className=\"light\">\r\n                    pomatsuev@gmail.com\r\n                  </a>\r\n                </p>\r\n              </Route>\r\n              <Route path=\"/game\">\r\n                <h2>Моя игра</h2>\r\n                <p>\r\n                  На коленочке сделал игру Монополию для телефонов, написанна на VUE, с\r\n                  использованием технологии PWA (можете сохранить себе на телефон)\r\n                </p>\r\n                <p>Оцените пожалуйста. Картинка кликабельна</p>\r\n                <a href=\"https://harry-monopoly.github.io\">\r\n                  <img alt=\"hp\" src={HP} />\r\n                </a>\r\n              </Route>\r\n              <Route path=\"/aquamarine\">\r\n                <h2>MERN проект</h2>\r\n                <p>\r\n                  Проект для салона, позволяет вести запись клиентов. Сделан на стеке MERN(Mongo,\r\n                  Express, React, Node). Проект написан на Typescript.\r\n                </p>\r\n                <a href=\"https://am-us.ru\" className=\"light\">\r\n                  {' '}\r\n                  Aquamarine Nails Studio Schedule{' '}\r\n                </a>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </section>\r\n        <section className=\"links\">\r\n          <ul className=\"desktop-menu-links\">\r\n            <Links toggleOpen={toggleOpen} />\r\n          </ul>\r\n          <ul className={mnuLinksListClasses}>\r\n            {isOpen && <Links isOpen={isOpen} toggleOpen={toggleOpen} />}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/main.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}